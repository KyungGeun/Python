# 리스트: 여러 데이터 값들을 저장할 수 있는 자료형
List = [1,1,2,3,4,5,6,7]
LIST = [2,5,7]

# 수정, 삭제, 연산(덧셈 곱셈)이 가능하다.
del List[-1]
print(List) # 출력: [1,1,2,3,4,5,6]
List[0] = 0
print(List) # 출력: [0,1,2,3,4,5,6]
print(List + LIST) # 출력 [0, 1, 2, 3, 4, 5, 6, 2, 5, 7]
print(LIST * 3) # 출력 [2, 5, 7, 2, 5, 7, 2, 5, 7]

# 문자열처럼 인덱스가 존재하기에, 인덱싱, 슬라이싱이 가능하다
print(List[5]) # 출력: 5
print(List[5:3:-1]) # 출력: [5, 4]

# 리스트 관련 함수
LIST.append(8) # 마지막 인덱스에 괄호 안의 값을 추가한다.
print(LIST) # 출력: [2, 5, 7, 8]
LIST.reverse() # 리스트의 순서를 반전
print(LIST) # 출력: [8, 7, 5, 2]
LIST.insert(2,6) # 첫번째 인자값: 값을 추가하고 싶은 인덱스, 두번째 인자값: 값
print(LIST) # 출력: [8, 7, 6, 5, 2]
p = LIST.pop() # 인자값이 없을 경우 -1 인덱스의 값을 추출
print(p, LIST) # 출력: 2, [8, 7, 6, 5]
q = LIST.pop(3) # 인자값이 있을 경우 그 인덱스의 값을 추출
print(q, LIST) # 출력: 5, [8, 7, 6]
LIST.sort() # 값을 오름차순으로 정렬(인자값에 reverse=False를 적어도)
print(LIST) # 출력: [6, 7, 8]
LIST.sort(reverse=True) # 값을 내림차순으로 정렬
print(LIST) # 출력: [8, 7, 6]
print(LIST.count(5)) # 리스트 안에 인자값이 몇 개가 있는지를 반환, 출력: 0
print(LIST.index(6)) # 리스트 안에 인자값이 몇 번째에 있는지를 반환, 출력: 2
LIST.remove(6) # del처럼 값을 삭제하는 메소드지만 del은 인덱스를 활용한다면 remove는 요소를 활용한다.
print(LIST) # 출력: [8, 7]
LIST.extend([2,5]) # append()처럼 인자값을 추가하지만, 확장한다는 느낌에 가깝다.
print(LIST) # 출력: [8, 7, 2, 5]

List.clear() # 리스트안의 모든 요소를 삭제한다.
LIST.clear() 
List.append([2,5]) 
LIST.extend([2,5])
print(List) # 출력: [[2,5]]
print(LIST) # 출력: [2,5]
